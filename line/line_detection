import numpy as np
import cv2

cap = cv2.VideoCapture(0)
cap.set(3, 1280)
cap.set(4, 720)

while True:
    retval, frame = cap.read()
    if not retval:
        break

    src = frame.copy()
    dst = src.copy()

    img_rgb = cv2.cvtColor(src, cv2.COLOR_BGR2HSV)
    # whiteLower = (200, 200, 200)
    # whiteUpper = (255, 255, 255)
    yellowLower = (10, 100, 100)
    yellowUpper = (40, 255, 255)
    mask = cv2.inRange(img_rgb, yellowLower, yellowUpper)
    cv2.imshow('mask', mask)
    img2 = cv2.bitwise_and(img_rgb, img_rgb, mask=mask)
    gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)

    canny = cv2.Canny(gray, 5000, 1500, apertureSize = 5, L2gradient = True)
    lines = cv2.HoughLinesP(canny, 0.8, np.pi / 180, 90, minLineLength = 10, maxLineGap = 100)

    try:
        for i in lines:
            cv2.line(dst, (int(i[0][0]), int(i[0][1])), (int(i[0][2]), int(i[0][3])), (0, 0, 255), 2)
            print(int(i[0][0]), int(i[0][1]), int(i[0][2]), int(i[0][3]))
            if abs(int(i[0][0])-int(i[0][2])) < 80:
                print('straight')
            elif abs(int(i[0][0])-int(i[0][2])) < 150:
                if(int(i[0][0])-int(i[0][2]))<0:
                    print('move right')
                else:
                    print('move left')
            else:
                print("rear")

    except TypeError:
        pass
    cv2.imshow("dst", dst)
    key = cv2.waitKey(25)
    if key == 27:
        break
if cap.isOpened():
    cap.release()
    cv2.destroyAllWindows()
